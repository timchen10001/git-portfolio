{"version":3,"sources":["components/Repository.tsx","components/IconGroup.tsx","components/Heading.tsx","components/Footer.tsx","App.tsx","hooks/useGithubRepos.ts","utils/selectRepository.ts","reportWebVitals.js","index.js"],"names":["Repository","index","repo","descriptions","description","split","title","isPortfolio","name","className","href","html_url","style","color","src","alt","homepage","map","des","idx","IconGroup","top","aria-label","Heading","Footer","App","repos","useState","data","setData","useEffect","fetch","then","response","json","result","reposToShow","WebClient","WebServer","filter","d","selectRepository","useGithubRepos","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6968f820.chunk.js","sourcesContent":["import \"../styles/Repository.css\";\nimport React from \"react\";\nimport { GithubResponse } from \"../types\";\n\ninterface RepositoryProps {\n  index: number;\n  repo: GithubResponse;\n}\n\nexport const Repository: React.FC<RepositoryProps> = ({ index, repo }) => {\n  const descriptions = repo.description?.split(\"✔️ \");\n  const title = descriptions?.[0];\n  const isPortfolio = repo.name === \"git-portfolio\";\n  return (\n    <ul className={`repository ${repo.name}-cover`}>\n      <h1 className=\"repository__name\" key={`name-${index}`}>\n        {repo.name}\n      </h1>\n      <div className=\"url__group\" key={`url-group-${index}`}>\n        <a\n          className=\"repository__url\"\n          href={`${repo.html_url}`}\n          key={`repo-url-${index}`}\n          title={`${repo.html_url}`}\n          style={{ color: !isPortfolio ? \"black\" : \"#C8C9CB\" }}\n        >\n          <img\n            src={\n              !isPortfolio\n                ? \"https://image.flaticon.com/icons/png/512/25/25231.png\"\n                : \"https://webstockreview.net/images250_/github-icon-png-8.png\"\n            }\n            alt={`${repo.name}-github`}\n          />\n          Repository\n        </a>\n        <a\n          className=\"repository__url\"\n          href={`${repo.homepage}`}\n          key={`repository-url-${index}`}\n          title={`${repo.homepage}`}\n          style={{ color: !isPortfolio ? \"black\" : \"white\" }}\n        >\n          <img\n            src={\n              !isPortfolio\n                ? \"https://upload.cc/i1/2021/03/11/kCU3tw.png\"\n                : \"https://res.cloudinary.com/dunc6xvuh/image/upload/v1615493859/material/Link-Building-Icon_lmxqtt.png\"\n            }\n            alt={`${repo.name}-homepage`}\n          />\n          Live Demo\n        </a>\n      </div>\n\n      <p className=\"repository__description\" key={`description-${index}`}>\n        <span className=\"repository__title2\">{title}</span>\n        <span className=\"repository__item\">\n          {descriptions?.map((des, idx) =>\n            idx === 0 ? null : (\n              <>\n                {`✔️ ${des}`}\n                <br />\n              </>\n            )\n          )}\n        </span>\n      </p>\n    </ul>\n  );\n};\n","import \"../styles/IconGroup.css\";\nimport React from \"react\";\n\ninterface IconGroupProps {\n  top: string;\n}\n\nexport const IconGroup: React.FC<IconGroupProps> = ({ top }) => {\n  return (\n    <div className=\"icon__group\" style={{ top }}>\n      <a\n        className=\"cakeresume__icon\"\n        aria-label=\"CakeResume\"\n        href=\"https://www.cakeresume.com/studentt369\"\n      >\n        <img\n          src=\"https://media.cakeresume.com/image/upload/s--_IPa2iFh--/c_pad,fl_png8,h_400,w_400/v1566814358/b4rcthbvywpj2caswc6v.png\"\n          alt=\"cakeresume\"\n        />\n      </a>\n      <a\n        className=\"github__icon\"\n        aria-label=\"GitHub\"\n        href=\"https://github.com/timchen10001\"\n      >\n        <img\n          src=\"https://image.flaticon.com/icons/png/512/25/25231.png\"\n          alt=\"github\"\n        />\n      </a>\n    </div>\n  );\n};\n","import \"../styles/Heading.css\";\nimport React from \"react\";\nimport { IconGroup } from \"./IconGroup\";\n\ninterface HeadingProps {}\n\nexport const Heading: React.FC<HeadingProps> = () => {\n  return (\n    <div className=\"parallax heading\">\n      <h1 className=\"heading__title\">\n        Hi ! I'm Tim Chen. <br/>\n        A lover of codes, coffee, and staying up all night.\n      </h1>\n      <IconGroup top={\"32%\"}/>\n    </div>\n  );\n};\n","import \"../styles/Footer.css\";\nimport React from \"react\";\nimport { IconGroup } from \"./IconGroup\";\n\ninterface FooterProps {}\n\nexport const Footer: React.FC<FooterProps> = () => {\n  return (\n    <div className=\"parallax footer\">\n      <h1 className=\"footer__title\">Thanks for watching !</h1>\n      <IconGroup top={\"36%\"} />\n    </div>\n  );\n};\n","import \"./styles/App.css\";\nimport { Repository } from \"./components/Repository\";\nimport { useGithubRepos } from \"./hooks/useGithubRepos\";\nimport { Heading } from \"./components/Heading\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  const repos = useGithubRepos();\n  console.log(repos);\n  return (\n    <div className=\"App\">\n      <Heading />\n      {repos.map((repo, index) => (\n        <div key={`repo-${index}`}>\n          <Repository index={index} repo={repo} />\n          {repo.name === \"git-portfolio\" ? null : (\n            <div className={`parallax ${repo.name}`}></div>\n          )}\n        </div>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport { GithubResponse } from \"../types\";\nimport { selectRepository } from \"../utils/selectRepository\";\n\nexport const useGithubRepos = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.github.com/users/timchen10001/repos\")\n      .then((response) => response.json())\n      .then((result) => {\n        setData(result);\n      });\n  }, []);\n  return selectRepository(data as GithubResponse[]);\n};\n","import { GithubResponse } from \"../types\";\n\nexport const selectRepository = (data: GithubResponse[]) => {\n  const reposToShow = {\n    \"mask-map\": true,\n    \"react-layout-demo\": true,\n    \"react-layout-demo2\": true,\n    \"git-portfolio\": true,\n    WebClient: true,\n    WebServer: true,\n  } as any;\n  return data.filter((d) => reposToShow[d.name]) as GithubResponse[];\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}